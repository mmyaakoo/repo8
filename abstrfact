using System;

interface IScreen
{
    void Display();
}

class SmartphoneScreen : IScreen
{
    public void Display()
    {
        Console.WriteLine("Smartphone Screen");
    }
}

class LaptopScreen : IScreen
{
    public void Display()
    {
        Console.WriteLine("Laptop Screen");
    }
}

interface IProcessor
{
    void Process();
}

class SmartphoneProcessor : IProcessor
{
    public void Process()
    {
        Console.WriteLine("Smartphone Processor");
    }
}

class LaptopProcessor : IProcessor
{
    public void Process()
    {
        Console.WriteLine("Laptop Processor");
    }
}

interface ICamera
{
    void Capture();
}

class SmartphoneCamera : ICamera
{
    public void Capture()
    {
        Console.WriteLine("Smartphone Camera");
    }
}

class LaptopCamera : ICamera
{
    public void Capture()
    {
        Console.WriteLine("Laptop Camera");
    }
}

abstract class TechProductFactory
{
    public abstract IScreen CreateScreen();
    public abstract IProcessor CreateProcessor();
    public abstract ICamera CreateCamera();
}

class SmartphoneFactory : TechProductFactory
{
    public override IScreen CreateScreen()
    {
        return new SmartphoneScreen();
    }

    public override IProcessor CreateProcessor()
    {
        return new SmartphoneProcessor();
    }

    public override ICamera CreateCamera()
    {
        return new SmartphoneCamera();
    }
}

class LaptopFactory : TechProductFactory
{
    public override IScreen CreateScreen()
    {
        return new LaptopScreen();
    }

    public override IProcessor CreateProcessor()
    {
        return new LaptopProcessor();
    }

    public override ICamera CreateCamera()
    {
        return new LaptopCamera();
    }
}

class Program
{
    static void Main()
    {
        Console.WriteLine("Choose a tech product type: 1 - Smartphone, 2 - Laptop");
        string userInput = Console.ReadLine();

        TechProductFactory techProductFactory = null;

        switch (userInput)
        {
            case "1":
                techProductFactory = new SmartphoneFactory();
                break;
            case "2":
                techProductFactory = new LaptopFactory();
                break;
            default:
                Console.WriteLine("Invalid choice.");
                return;
        }

        IScreen screen = techProductFactory.CreateScreen();
        IProcessor processor = techProductFactory.CreateProcessor();
        ICamera camera = techProductFactory.CreateCamera();

        Console.WriteLine("Assembling and testing the tech product:");
        screen.Display();
        processor.Process();
        camera.Capture();
    }
}
